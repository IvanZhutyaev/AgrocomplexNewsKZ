import asyncio
import os
import random
import hashlib
from aiogram import Bot
from aiogram.types import FSInputFile
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.exceptions import TelegramForbiddenError, TelegramNetworkError
from config import BOT_TOKEN, ADMINS

bot = Bot(token=BOT_TOKEN)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
pending_raw_news = {}  # –î–ª—è —Å—ã—Ä—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ
pending_processed_news = {}  # –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø—É–±–ª–∏–∫–∞—Ü–∏—é


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—ã—Ä–æ–π –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ –ø–µ—Ä–≤–∏—á–Ω–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ
async def send_raw_news_to_admin(title: str, news_text: str, source_url: str):
    max_retries = 3
    for attempt in range(max_retries):
        try:
            image_files = os.listdir("images")
            if not image_files:
                print("‚ùå –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ images")
                return

            image_path = os.path.join("images", random.choice(image_files))
            news_id = hashlib.md5(source_url.encode()).hexdigest()
            pending_raw_news[news_id] = {
                "url": source_url,
                "image": image_path,
                "title": title,
                "text": news_text
            }

            keyboard = InlineKeyboardBuilder()
            keyboard.button(text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", callback_data=f"approve_raw|{news_id}")
            keyboard.button(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_raw|{news_id}")

            photo = FSInputFile(image_path)
            admin_caption = f"<b>{title}</b>\n\n{news_text}\n\nüîó –ò—Å—Ç–æ—á–Ω–∏–∫: {source_url}"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –í–°–ï–ú –∞–¥–º–∏–Ω–∞–º
            sent_to_admins = 0
            for admin_id in ADMINS:
                try:
                    if len(admin_caption) <= 1024:
                        await bot.send_photo(
                            admin_id,
                            photo,
                            caption=admin_caption,
                            reply_markup=keyboard.as_markup(),
                            parse_mode="HTML"
                        )
                    else:
                        await bot.send_photo(
                            admin_id,
                            photo,
                            caption=f"<b>{title}</b>\n\nüîó –ò—Å—Ç–æ—á–Ω–∏–∫: {source_url}",
                            reply_markup=keyboard.as_markup(),
                            parse_mode="HTML"
                        )
                        await bot.send_message(admin_id, news_text)
                    print(f"‚úÖ –°—ã—Ä–∞—è –Ω–æ–≤–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω—É {admin_id}")
                    sent_to_admins += 1
                except TelegramForbiddenError:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—É {admin_id} ‚Äî –æ–Ω –Ω–µ –Ω–∞–ø–∏—Å–∞–ª –±–æ—Ç—É.")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {e}")

            if sent_to_admins > 0:
                print(f"üì® –°—ã—Ä–∞—è –Ω–æ–≤–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ {sent_to_admins} –∞–¥–º–∏–Ω–∞–º")
                break

        except TelegramNetworkError as e:
            if attempt < max_retries - 1:
                wait_time = 2 ** attempt
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Ç–∏, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1} —á–µ—Ä–µ–∑ {wait_time} —Å–µ–∫...")
                await asyncio.sleep(wait_time)
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—ã—Ä—É—é –Ω–æ–≤–æ—Å—Ç—å –ø–æ—Å–ª–µ {max_retries} –ø–æ–ø—ã—Ç–æ–∫: {e}")
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ send_raw_news_to_admin: {e}")
            break


# –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ
async def send_processed_news_to_admin(news_text: str, source_url: str, original_title: str):
    max_retries = 3
    for attempt in range(max_retries):
        try:
            image_files = os.listdir("images")
            if not image_files:
                print("‚ùå –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ images")
                return

            image_path = os.path.join("images", random.choice(image_files))
            news_id = hashlib.md5(f"{source_url}_processed".encode()).hexdigest()
            pending_processed_news[news_id] = {
                "url": source_url,
                "image": image_path,
                "text": news_text
            }

            keyboard = InlineKeyboardBuilder()
            keyboard.button(text="üåê –ù–∞ —Å–∞–π—Ç", callback_data=f"site|{news_id}")
            keyboard.button(text="‚úÖ –í Telegram", callback_data=f"approve|{news_id}")
            keyboard.button(text="üöÄ –û–±–∞", callback_data=f"both|{news_id}")
            keyboard.button(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject|{news_id}")

            photo = FSInputFile(image_path)
            admin_caption = f"‚úçÔ∏è <b>–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å</b>\n(–æ—Ä–∏–≥–∏–Ω–∞–ª: {original_title})\n\n{news_text}"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –í–°–ï–ú –∞–¥–º–∏–Ω–∞–º
            sent_to_admins = 0
            for admin_id in ADMINS:
                try:
                    if len(admin_caption) <= 1024:
                        await bot.send_photo(
                            admin_id,
                            photo,
                            caption=admin_caption,
                            reply_markup=keyboard.as_markup(),
                            parse_mode="HTML"
                        )
                    else:
                        await bot.send_photo(
                            admin_id,
                            photo,
                            caption=f"‚úçÔ∏è <b>–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å</b>\n(–æ—Ä–∏–≥–∏–Ω–∞–ª: {original_title})",
                            reply_markup=keyboard.as_markup(),
                            parse_mode="HTML"
                        )
                        await bot.send_message(admin_id, news_text, parse_mode="HTML")
                    print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω—É {admin_id}")
                    sent_to_admins += 1
                except TelegramForbiddenError:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—É {admin_id} ‚Äî –æ–Ω –Ω–µ –Ω–∞–ø–∏—Å–∞–ª –±–æ—Ç—É.")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {e}")

            if sent_to_admins > 0:
                print(f"üì® –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ {sent_to_admins} –∞–¥–º–∏–Ω–∞–º")
                break

        except TelegramNetworkError as e:
            if attempt < max_retries - 1:
                wait_time = 2 ** attempt
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Ç–∏, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1} —á–µ—Ä–µ–∑ {wait_time} —Å–µ–∫...")
                await asyncio.sleep(wait_time)
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å –ø–æ—Å–ª–µ {max_retries} –ø–æ–ø—ã—Ç–æ–∫: {e}")
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ send_processed_news_to_admin: {e}")
            break


# –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
def get_pending_raw_news():
    return pending_raw_news

def get_pending_processed_news():
    return pending_processed_news

def remove_from_pending_raw_news(news_id):
    if news_id in pending_raw_news:
        pending_raw_news.pop(news_id, None)

def remove_from_pending_processed_news(news_id):
    if news_id in pending_processed_news:
        pending_processed_news.pop(news_id, None)