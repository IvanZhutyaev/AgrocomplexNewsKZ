import asyncio
import os
from aiogram import Bot, Dispatcher, F, types
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import FSInputFile
from config import BOT_TOKEN, CHANNEL_ID, ADMINS
from database import init_db, add_site, remove_site, get_sites, is_news_sent, mark_news_sent, mark_news_published, \
    get_queue_size, clear_stuck_processing
from site_poster import post_news_to_site
from news_sender import send_processed_news_to_admin, get_pending_raw_news, get_pending_processed_news, \
    remove_from_pending_raw_news, remove_from_pending_processed_news, delete_news_messages

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
def is_admin(user_id: int) -> bool:
    return user_id in ADMINS


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è —Å—ã—Ä–æ–π –Ω–æ–≤–æ—Å—Ç–∏
@dp.callback_query(F.data.startswith("approve_raw|"))
async def approve_raw_news(callback: types.CallbackQuery):
    await callback.answer("‚úÖ –ù–æ–≤–æ—Å—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")

    _, news_id = callback.data.split("|", 1)
    data = get_pending_raw_news().get(news_id)
    if not data:
        await delete_news_messages(callback.from_user.id, news_id)
        await callback.message.answer("‚ùå –ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —ç—Ç–æ–π –Ω–æ–≤–æ—Å—Ç–∏ —É –∞–¥–º–∏–Ω–∞
    await delete_news_messages(callback.from_user.id, news_id)

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ DeepSeek
    from parser import process_with_deepseek
    processed_text = await process_with_deepseek(data["title"], data["text"])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ
    await send_processed_news_to_admin(processed_text, data["url"], data["title"])

    # –£–¥–∞–ª—è–µ–º –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    remove_from_pending_raw_news(news_id)

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞
    await callback.message.answer("‚úÖ –ù–æ–≤–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É DeepSeek")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —Å—ã—Ä–æ–π –Ω–æ–≤–æ—Å—Ç–∏
@dp.callback_query(F.data.startswith("reject_raw|"))
async def reject_raw_news(callback: types.CallbackQuery):
    try:
        await callback.answer("‚ùå –ù–æ–≤–æ—Å—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")
    except Exception:
        pass

    _, news_id = callback.data.split("|", 1)

    # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —ç—Ç–æ–π –Ω–æ–≤–æ—Å—Ç–∏ —É –∞–¥–º–∏–Ω–∞
    await delete_news_messages(callback.from_user.id, news_id)

    remove_from_pending_raw_news(news_id)

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –í–°–ï–• –∞–¥–º–∏–Ω–æ–≤ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏
    for admin_id in ADMINS:
        try:
            await bot.send_message(admin_id, "‚ùå –°—ã—Ä–∞—è –Ω–æ–≤–æ—Å—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")
        except Exception:
            pass


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è Telegram
@dp.callback_query(F.data.startswith("approve|"))
async def approve_processed_news(callback: types.CallbackQuery):
    await callback.answer()

    _, news_id = callback.data.split("|", 1)
    data = get_pending_processed_news().get(news_id)
    if not data:
        await delete_news_messages(callback.from_user.id, news_id)
        await callback.message.answer("‚ùå –ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    news_text = data["text"]
    image_path = data["image"]

    if not os.path.exists(image_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {image_path}")
        await delete_news_messages(callback.from_user.id, news_id)
        await callback.message.answer("‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –Ω–æ–≤–æ—Å—Ç—å –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
        return

    photo = FSInputFile(image_path)

    try:
        # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –Ω–∞—á–∞–ª–æ–º —Ç–µ–∫—Å—Ç–∞ (–µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –∫–æ—Ä–æ—Ç–∫–∏–π)
        if len(news_text) <= 1024:
            # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ
            await bot.send_photo(CHANNEL_ID, photo, caption=news_text, parse_mode="HTML")
        else:
            # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª–∏–Ω–Ω—ã–π - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞, –∞ —Ç–µ–∫—Å—Ç –æ—Ç–¥–µ–ª—å–Ω–æ
            await bot.send_photo(CHANNEL_ID, photo)
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —á–∞—Å—Ç—è–º–∏
            from news_sender import send_long_message
            await send_long_message(CHANNEL_ID, news_text, "")

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª:", e)
        await delete_news_messages(callback.from_user.id, news_id)
        await callback.message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å –≤ –∫–∞–Ω–∞–ª.")
        return

    # –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—É—é
    await mark_news_published(data["url"])
    remove_from_pending_processed_news(news_id)

    # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —ç—Ç–æ–π –Ω–æ–≤–æ—Å—Ç–∏ —É –∞–¥–º–∏–Ω–∞
    await delete_news_messages(callback.from_user.id, news_id)

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –í–°–ï–• –∞–¥–º–∏–Ω–æ–≤ –æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    for admin_id in ADMINS:
        try:
            await bot.send_message(admin_id, "‚úÖ –ù–æ–≤–æ—Å—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ Telegram.")
        except Exception:
            pass


@dp.callback_query(F.data.startswith("site|"))
async def post_to_site(callback: types.CallbackQuery):
    try:
        await callback.answer()
        _, news_id = callback.data.split("|", 1)
        data = get_pending_processed_news().get(news_id)
        if not data:
            await delete_news_messages(callback.from_user.id, news_id)
            await callback.message.answer("‚ùå –ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return

        success = post_news_to_site(data["text"], data["image"])
        if success:
            await mark_news_published(data["url"])
            remove_from_pending_processed_news(news_id)
            await delete_news_messages(callback.from_user.id, news_id)
            await callback.message.answer("üåê –ù–æ–≤–æ—Å—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –Ω–∞ —Å–∞–π—Ç–µ!")

            for admin_id in ADMINS:
                try:
                    await bot.send_message(admin_id, "üåê –ù–æ–≤–æ—Å—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –Ω–∞ —Å–∞–π—Ç–µ!")
                except Exception:
                    pass
        else:
            await delete_news_messages(callback.from_user.id, news_id)
            await callback.message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ post_to_site: {e}")
        await delete_news_messages(callback.from_user.id, news_id)
        await callback.message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ.")


@dp.callback_query(F.data.startswith("both|"))
async def post_to_both(callback: types.CallbackQuery):
    try:
        await callback.answer()
        _, news_id = callback.data.split("|", 1)
        data = get_pending_processed_news().get(news_id)
        if not data:
            await delete_news_messages(callback.from_user.id, news_id)
            await callback.message.answer("‚ùå –ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return

        image_path = data["image"]
        text = data["text"]

        # 1Ô∏è‚É£ –ü—É–±–ª–∏–∫—É–µ–º –Ω–∞ —Å–∞–π—Ç
        success_site = post_news_to_site(text, image_path)

        # 2Ô∏è‚É£ –ü—É–±–ª–∏–∫—É–µ–º –≤ Telegram
        try:
            photo = FSInputFile(image_path)
            if len(text) <= 1024:
                await bot.send_photo(CHANNEL_ID, photo, caption=text, parse_mode="HTML")
            else:
                await bot.send_photo(CHANNEL_ID, photo)
                from news_sender import send_long_message
                await send_long_message(CHANNEL_ID, text, "")
            success_tg = True
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram:", e)
            success_tg = False

        # –†–µ–∑—É–ª—å—Ç–∞—Ç
        if success_site or success_tg:
            await mark_news_published(data["url"])
            remove_from_pending_processed_news(news_id)
            await delete_news_messages(callback.from_user.id, news_id)

            result_message = ""
            if success_site and success_tg:
                result_message = "üöÄ –ù–æ–≤–æ—Å—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ Telegram –∏ –Ω–∞ —Å–∞–π—Ç–µ!"
            elif success_site:
                result_message = "üåê –ù–æ–≤–æ—Å—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –Ω–∞ —Å–∞–π—Ç–µ (Telegram –Ω–µ —É–¥–∞–ª–æ—Å—å)!"
            else:
                result_message = "‚úÖ –ù–æ–≤–æ—Å—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ Telegram (—Å–∞–π—Ç –Ω–µ —É–¥–∞–ª–æ—Å—å)!"

            await callback.message.answer(result_message)
            for admin_id in ADMINS:
                try:
                    await bot.send_message(admin_id, result_message)
                except Exception:
                    pass
        else:
            await delete_news_messages(callback.from_user.id, news_id)
            await callback.message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (–ø—Ä–æ–≤–µ—Ä—å –ª–æ–≥).")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ post_to_both: {e}")
        await delete_news_messages(callback.from_user.id, news_id)
        await callback.message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.")


@dp.callback_query(F.data.startswith("reject|"))
async def reject_processed_news(callback: types.CallbackQuery):
    try:
        await callback.answer("‚ùå –ù–æ–≤–æ—Å—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")
    except Exception:
        pass

    _, news_id = callback.data.split("|", 1)

    # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —ç—Ç–æ–π –Ω–æ–≤–æ—Å—Ç–∏ —É –∞–¥–º–∏–Ω–∞
    await delete_news_messages(callback.from_user.id, news_id)

    remove_from_pending_processed_news(news_id)

    for admin_id in ADMINS:
        try:
            await bot.send_message(admin_id, "‚ùå –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")
        except Exception:
            pass

async def delete_message_safe(callback: types.CallbackQuery):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏"""
    try:
        await callback.message.delete()
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω–æ –∏–∑ —á–∞—Ç–∞")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
        # –ü—Ä–æ–±—É–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ —É–¥–∞–ª–∏—Ç—å –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å
        try:
            await callback.message.edit_text(
                "üóëÔ∏è –ù–æ–≤–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∏ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —á–∞—Ç–∞",
                reply_markup=None
            )
        except Exception:
            pass

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –¢—ã –Ω–µ –∞–¥–º–∏–Ω!")
        return

    help_text = """
ü§ñ *–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ù–æ–≤–æ—Å—Ç–Ω—ã–º –ë–æ—Ç–æ–º*

*üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*

*/start* - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
*/help* - –ø–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º

*üåê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ RSS-–ª–µ–Ω—Ç–∞–º–∏:*
*/addsite <url>* - –¥–æ–±–∞–≤–∏—Ç—å RSS-–ª–µ–Ω—Ç—É
*/listsites* - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ RSS-–ª–µ–Ω—Ç—ã  
*/removesite <url>* - —É–¥–∞–ª–∏—Ç—å RSS-–ª–µ–Ω—Ç—É

*üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—á–µ—Ä–µ–¥—å—é –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:*
*/queue* - —Å—Ç–∞—Ç—É—Å –æ—á–µ—Ä–µ–¥–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
*/postnext* - –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –Ω–æ–≤–æ—Å—Ç—å –≤—Ä—É—á–Ω—É—é
*/skipnext* - –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–≤–∏—Å—à—É—é –Ω–æ–≤–æ—Å—Ç—å
*/postlatest* - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å RSS-–ª–µ–Ω—Ç—ã
*/force_check* - –º–∞—Å—Å–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö RSS (–¥–æ 15 –Ω–æ–≤–æ—Å—Ç–µ–π —Å –∫–∞–∂–¥–æ–≥–æ)

*üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏:*

*1 –≠–¢–ê–ü - –°—ã—Ä–∞—è –Ω–æ–≤–æ—Å—Ç—å:*
‚Ä¢ üì• –ù–æ–≤–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–∞—Ä—Å—è—Ç—Å—è –∏–∑ RSS-–ª–µ–Ω—Ç
‚Ä¢ ‚è≥ –î–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ –æ—á–µ—Ä–µ–¥—å –æ–±—Ä–∞–±–æ—Ç–∫–∏
‚Ä¢ üëÅÔ∏è –°—ã—Ä–∞—è –Ω–æ–≤–æ—Å—Ç—å –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –æ–¥–æ–±—Ä–µ–Ω–∏—è
‚Ä¢ ‚úÖ *–û–¥–æ–±—Ä–∏—Ç—å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è* - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ AI-–æ–±—Ä–∞–±–æ—Ç–∫—É —á–µ—Ä–µ–∑ DeepSeek
‚Ä¢ ‚ùå *–û—Ç–∫–ª–æ–Ω–∏—Ç—å* - —É–¥–∞–ª—è–µ—Ç –Ω–æ–≤–æ—Å—Ç—å –∏–∑ —Å–∏—Å—Ç–µ–º—ã

*2 –≠–¢–ê–ü - –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å:*
‚Ä¢ ü§ñ DeepSeek –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ—Ç –Ω–æ–≤–æ—Å—Ç—å –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ
‚Ä¢ ‚úçÔ∏è –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω—É—é –º–æ–¥–µ—Ä–∞—Ü–∏—é
‚Ä¢ üåê *–ù–∞ —Å–∞–π—Ç* - –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–∞–π—Ç–µ agrosearch.kz
‚Ä¢ ‚úÖ *–í Telegram* - –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ Telegram-–∫–∞–Ω–∞–ª  
‚Ä¢ üöÄ *–û–±–∞* - –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤–µ–∑–¥–µ
‚Ä¢ ‚ùå *–û—Ç–∫–ª–æ–Ω–∏—Ç—å* - —É–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å

*‚öôÔ∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:*

‚Ä¢ *–ê–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥*: –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç RSS-–ª–µ–Ω—Ç—ã
‚Ä¢ *–û—á–µ—Ä–µ–¥—å*: –ù–æ–≤–æ—Å—Ç–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ø–æ –æ–¥–Ω–æ–π –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Å–ø–∞–º–∞
‚Ä¢ *–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è*: –°–ª—É—á–∞–π–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏–∑ –ø–∞–ø–∫–∏ /images
‚Ä¢ *AI-–æ–±—Ä–∞–±–æ—Ç–∫–∞*: DeepSeek –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç (250-300 —Å–ª–æ–≤)
‚Ä¢ *–ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å*: –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
‚Ä¢ *–î—É–±–ª–∏–∫–∞—Ç—ã*: –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–±–µ–≥–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π

*üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ—á–µ—Ä–µ–¥–∏
‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π

–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –¥–æ–±–∞–≤—å—Ç–µ RSS-–ª–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–æ–π /addsite
–ü—Ä–∏–º–µ—Ä—ã –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö RSS:
‚Ä¢ `https://www.agroinvestor.ru/news/rss/`
‚Ä¢ `https://www.agroxxi.ru/export/rss.xml`
‚Ä¢ `https://ria.ru/export/rss2/agriculture/index.xml`
    """

    await message.answer(help_text, parse_mode="Markdown")


@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –¢—ã –Ω–µ –∞–¥–º–∏–Ω!")
        return

    help_text = """
üìñ *–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞*

*üåê –î–û–ë–ê–í–õ–ï–ù–ò–ï –ò –£–ü–†–ê–í–õ–ï–ù–ò–ï RSS-–õ–ï–ù–¢–ê–ú–ò:*

`/addsite https://example.com/rss` - –¥–æ–±–∞–≤–∏—Ç—å –æ–¥–Ω—É RSS-–ª–µ–Ω—Ç—É
`/addsite https://site1.com/rss, https://site2.com/rss` - –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
`/listsites` - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ RSS-–ª–µ–Ω—Ç—ã
`/removesite https://example.com/rss` - —É–¥–∞–ª–∏—Ç—å RSS-–ª–µ–Ω—Ç—É

*üìä –£–ü–†–ê–í–õ–ï–ù–ò–ï –û–ß–ï–†–ï–î–¨–Æ –ò –ú–û–ù–ò–¢–û–†–ò–ù–ì:*

`/queue` - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:
   ‚Ä¢ –ù–æ–≤–æ—Å—Ç–µ–π –≤ –æ—á–µ—Ä–µ–¥–∏
   ‚Ä¢ –°—ã—Ä—ã—Ö –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏  
   ‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ
   ‚Ä¢ –í—Å–µ–≥–æ –∞–¥–º–∏–Ω–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ

`/postnext` - –≤—Ä—É—á–Ω—É—é –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–ª–µ–¥—É—é—â–µ–π –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
`/skipnext` - –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–≤–∏—Å—à—É—é –Ω–æ–≤–æ—Å—Ç—å (–æ—á–∏—â–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏)
`/postlatest` - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –í–°–ï RSS-–ª–µ–Ω—Ç—ã (–ø–æ 1 –Ω–æ–≤–æ—Å—Ç–∏ —Å –∫–∞–∂–¥–æ–≥–æ)
`/force_check` - –º–∞—Å—Å–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–¥–æ 15 –Ω–æ–≤–æ—Å—Ç–µ–π —Å –∫–∞–∂–¥–æ–π –ª–µ–Ω—Ç—ã)

*üîÑ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ü–†–û–¶–ï–°–°:*

1. *–ü–∞—Ä—Å–∏–Ω–≥*: –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –í–°–ï RSS-–ª–µ–Ω—Ç—ã
2. *–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è*: –ò—Å–∫–ª—é—á–∞—é—Ç—Å—è —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
3. *–û—á–µ—Ä–µ–¥—å*: –ù–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ –æ—á–µ—Ä–µ–¥—å –æ–±—Ä–∞–±–æ—Ç–∫–∏
4. *–ü–µ—Ä–≤–∞—è –º–æ–¥–µ—Ä–∞—Ü–∏—è*: –°—ã—Ä–∞—è –Ω–æ–≤–æ—Å—Ç—å –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
5. *AI-–æ–±—Ä–∞–±–æ—Ç–∫–∞*: –ü–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è ‚Üí DeepSeek –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç
6. *–§–∏–Ω–∞–ª—å–Ω–∞—è –º–æ–¥–µ—Ä–∞—Ü–∏—è*: –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å –Ω–∞ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
7. *–ü—É–±–ª–∏–∫–∞—Ü–∏—è*: –í—ã–±–æ—Ä –ø–ª–∞—Ç—Ñ–æ—Ä–º (—Å–∞–π—Ç, Telegram, –æ–±–∞)

*üéØ –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –°–ò–°–¢–ï–ú–´:*

‚Ä¢ *–£–º–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥*: –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å—Ç–∞—Ç—å–∏
‚Ä¢ *AI-—Ä–µ—Ä–∞–π—Ç*: –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ DeepSeek
‚Ä¢ *–ê–≤—Ç–æ–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è*: –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∏–∑ –±–∞–∑—ã
‚Ä¢ *–ó–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–µ–π*: –ö–æ–Ω—Ç—Ä–æ–ª—å –ø–æ URL-—Å—Å—ã–ª–∫–∞–º
‚Ä¢ *–ú—É–ª—å—Ç–∏-–∞–¥–º–∏–Ω*: –í—Å–µ –∞–¥–º–∏–Ω—ã –ø–æ–ª—É—á–∞—é—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
‚Ä¢ *–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ*: –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏

*‚ö†Ô∏è –£–°–¢–†–ê–ù–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú:*

‚Ä¢ *–ù–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π*: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/force_check` –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
‚Ä¢ *–ó–∞–≤–∏—Å–ª–∞ –æ—á–µ—Ä–µ–¥—å*: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/skipnext` –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
‚Ä¢ *–û—à–∏–±–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏*: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±–æ—Ç–∞

*üîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:*

‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ 3-5 RSS-–ª–µ–Ω—Ç –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ `/queue` –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/force_check` —Ä–∞–∑ –≤ –¥–µ–Ω—å –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è

–î–ª—è —Å—Ç–∞—Ä—Ç–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É RSS-–ª–µ–Ω—Ç—É –∫–æ–º–∞–Ω–¥–æ–π `/addsite`!
    """

    await message.answer(help_text, parse_mode="Markdown")


@dp.message(Command("addsite"))
async def cmd_add_site(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –¢—ã –Ω–µ –∞–¥–º–∏–Ω!")
        return

    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.answer(
            "‚ùå –£–∫–∞–∂–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ RSS (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏–ª–∏ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏)\n\n"
            "–ü—Ä–∏–º–µ—Ä—ã:\n"
            "‚Ä¢ `/addsite https://example1.com/rss, https://example2.com/rss`\n"
            "‚Ä¢ `/addsite https://example1.com/rss`\n"
            "    `https://example2.com/rss`\n"
            "    `https://example3.com/rss`",
            parse_mode="Markdown"
        )
        return

    urls_text = args[1].strip()

    # –†–∞–∑–±–∏–≤–∞–µ–º —Å—Å—ã–ª–∫–∏ –ø–æ —Ä–∞–∑–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º
    urls = []
    for line in urls_text.split('\n'):
        line = line.strip()
        if not line:
            continue
        # –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ –∑–∞–ø—è—Ç—ã–º –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
        for url in line.split(','):
            url = url.strip()
            if url:
                urls.append(url)

    if not urls:
        await message.answer("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å—Å—ã–ª–æ–∫")
        return

    added_urls = []
    error_urls = []

    for url in urls:
        # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è URL
        if not url.startswith(('http://', 'https://')):
            error_urls.append(f"{url} (–Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)")
            continue

        try:
            await add_site(url)
            added_urls.append(url)
        except Exception as e:
            error_urls.append(f"{url} ({str(e)})")

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    result_message = ""

    if added_urls:
        result_message += f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(added_urls)} RSS-–ª–µ–Ω—Ç:\n"
        for url in added_urls:
            result_message += f"‚Ä¢ `{url}`\n"

    if error_urls:
        if result_message:
            result_message += "\n"
        result_message += f"‚ùå –û—à–∏–±–∫–∏ ({len(error_urls)}):\n"
        for error in error_urls:
            result_message += f"‚Ä¢ {error}\n"

    await message.answer(result_message, parse_mode="Markdown")


@dp.message(Command("listsites"))
async def cmd_list_sites(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –¢—ã –Ω–µ –∞–¥–º–∏–Ω!")
        return

    sites = await get_sites()
    if not sites:
        await message.answer("üì≠ RSS-–ª–µ–Ω—Ç—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã\n–ò—Å–ø–æ–ª—å–∑—É–π /addsite –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è")
        return

    sites_text = "üìã *–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ RSS-–ª–µ–Ω—Ç—ã:*\n\n"
    for i, site in enumerate(sites, 1):
        sites_text += f"{i}. `{site}`\n"

    sites_text += f"\n–í—Å–µ–≥–æ: {len(sites)} –ª–µ–Ω—Ç"
    await message.answer(sites_text, parse_mode="Markdown")


@dp.message(Command("removesite"))
async def cmd_remove_site(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –¢—ã –Ω–µ –∞–¥–º–∏–Ω!")
        return

    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.answer(
            "‚ùå –£–∫–∞–∂–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ RSS –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏–ª–∏ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏)\n\n"
            "–ü—Ä–∏–º–µ—Ä—ã:\n"
            "‚Ä¢ `/removesite https://example1.com/rss, https://example2.com/rss`\n"
            "‚Ä¢ `/removesite https://example1.com/rss`\n"
            "    `https://example2.com/rss`\n"
            "    `https://example3.com/rss`\n\n"
            "üìã –°–Ω–∞—á–∞–ª–∞ –ø–æ—Å–º–æ—Ç—Ä–∏ —Å–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤: /listsites",
            parse_mode="Markdown"
        )
        return

    urls_text = args[1].strip()

    # –†–∞–∑–±–∏–≤–∞–µ–º —Å—Å—ã–ª–∫–∏ –ø–æ —Ä–∞–∑–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º
    urls = []
    for line in urls_text.split('\n'):
        line = line.strip()
        if not line:
            continue
        # –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ –∑–∞–ø—è—Ç—ã–º –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
        for url in line.split(','):
            url = url.strip()
            if url:
                urls.append(url)

    if not urls:
        await message.answer("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å—Å—ã–ª–æ–∫")
        return

    removed_urls = []
    error_urls = []
    not_found_urls = []

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    current_sites = await get_sites()

    for url in urls:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∞–π—Ç –≤ —Å–ø–∏—Å–∫–µ
        if url not in current_sites:
            not_found_urls.append(url)
            continue

        try:
            await remove_site(url)
            removed_urls.append(url)
        except Exception as e:
            error_urls.append(f"{url} ({str(e)})")

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    result_message = ""

    if removed_urls:
        result_message += f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {len(removed_urls)} RSS-–ª–µ–Ω—Ç:\n"
        for url in removed_urls:
            result_message += f"‚Ä¢ `{url}`\n"

    if not_found_urls:
        if result_message:
            result_message += "\n"
        result_message += f"‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ø–∏—Å–∫–µ ({len(not_found_urls)}):\n"
        for url in not_found_urls:
            result_message += f"‚Ä¢ `{url}`\n"

    if error_urls:
        if result_message:
            result_message += "\n"
        result_message += f"‚ùå –û—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è ({len(error_urls)}):\n"
        for error in error_urls:
            result_message += f"‚Ä¢ {error}\n"

    if not removed_urls and not not_found_urls and not error_urls:
        result_message = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–π RSS-–ª–µ–Ω—Ç—ã"

    await message.answer(result_message, parse_mode="Markdown")


@dp.message(Command("queue"))
async def cmd_queue_status(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –¢—ã –Ω–µ –∞–¥–º–∏–Ω!")
        return

    queue_size = await get_queue_size()
    from news_sender import get_pending_raw_news, get_pending_processed_news
    pending_raw_count = len(get_pending_raw_news())
    pending_processed_count = len(get_pending_processed_news())

    status_text = (
        f"üìä *–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã*\n\n"
        f"‚Ä¢ üì• –ù–æ–≤–æ—Å—Ç–µ–π –≤ –æ—á–µ—Ä–µ–¥–∏: *{queue_size}*\n"
        f"‚Ä¢ ‚è≥ –°—ã—Ä—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏: *{pending_raw_count}*\n"
        f"‚Ä¢ ‚úçÔ∏è –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏: *{pending_processed_count}*\n"
        f"‚Ä¢ üë• –í—Å–µ–≥–æ –∞–¥–º–∏–Ω–æ–≤: *{len(ADMINS)}*\n"
        f"\n*–ü—Ä–æ—Ü–µ—Å—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏:*\n"
        f"1. –°—ã—Ä–∞—è –Ω–æ–≤–æ—Å—Ç—å ‚Üí –û–¥–æ–±—Ä–µ–Ω–∏–µ ‚Üí DeepSeek\n"
        f"2. –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å ‚Üí –ü—É–±–ª–∏–∫–∞—Ü–∏—è\n"
        f"\n*–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—á–µ—Ä–µ–¥—å—é:*\n"
        f"`/postnext` - –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –Ω–æ–≤–æ—Å—Ç—å\n"
        f"`/skipnext` - –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â—É—é –Ω–æ–≤–æ—Å—Ç—å\n"
        f"`/postlatest` - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å RSS\n"
        f"\n*–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–µ–Ω—Ç:*\n"
        f"`/addsite <url>` - –¥–æ–±–∞–≤–∏—Ç—å RSS\n"
        f"`/listsites` - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–µ–Ω—Ç—ã"
    )

    await message.answer(status_text, parse_mode="Markdown")


@dp.message(Command("postnext"))
async def cmd_post_next(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –¢—ã –Ω–µ –∞–¥–º–∏–Ω!")
        return

    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–ª–µ–¥—É—é—â–µ–π –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
    from parser import process_next_from_queue
    success = await process_next_from_queue()

    if success:
        await message.answer("‚úÖ –°–ª–µ–¥—É—é—â–∞—è –Ω–æ–≤–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–µ—Ä–≤–∏—á–Ω—É—é –º–æ–¥–µ—Ä–∞—Ü–∏—é –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º!")
    else:
        await message.answer("‚ùå –í –æ—á–µ—Ä–µ–¥–∏ –Ω–µ—Ç –Ω–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π.")


@dp.message(Command("skipnext"))
async def cmd_skip_next(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –¢—ã –Ω–µ –∞–¥–º–∏–Ω!")
        return

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—É—â—É—é –Ω–æ–≤–æ—Å—Ç—å (–æ—á–∏—â–∞–µ–º –∑–∞–≤–∏—Å—à–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏)
    await clear_stuck_processing()
    await message.answer("‚úÖ –ó–∞–≤–∏—Å—à–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—á–∏—â–µ–Ω—ã. –°–ª–µ–¥—É—é—â–∞—è –Ω–æ–≤–æ—Å—Ç—å –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.")


@dp.message(Command("postlatest"))
async def cmd_post_latest(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –¢—ã –Ω–µ –∞–¥–º–∏–Ω!")
        return

    sites = await get_sites()
    if not sites:
        await message.answer("‚ùå –°–∞–π—Ç—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π /addsite")
        return

    await message.answer("üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—é RSS-–ª–µ–Ω—Ç—ã...")

    posted = 0
    for url in sites:
        from parser import parse_feed_and_process
        try:
            news_count = await parse_feed_and_process(url, limit=1)
            posted += news_count
            if news_count > 0:
                await message.answer(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {news_count} –Ω–æ–≤–æ—Å—Ç–µ–π –≤ –æ—á–µ—Ä–µ–¥—å –∏–∑:\n`{url}`", parse_mode="Markdown")
        except Exception as e:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {url}:\n`{e}`", parse_mode="Markdown")

    if posted == 0:
        await message.answer("‚ÑπÔ∏è –ù–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ—Ç.")
    else:
        await message.answer(f"üéØ –í—Å–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å: {posted} –Ω–æ–≤–æ—Å—Ç–µ–π")


# –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ bot.py –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
@dp.message(Command("force_check"))
async def cmd_force_check(message: types.Message):
    if not is_admin(message.from_user.id):
        return

    await message.answer("üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö RSS...")
    sites = await get_sites()
    total_added = 0

    for url in sites:
        from parser import parse_feed_and_process
        added = await parse_feed_and_process(url, limit=15)  # –ë–æ–ª—å—à–µ –Ω–æ–≤–æ—Å—Ç–µ–π
        total_added += added
        await asyncio.sleep(1)

    await message.answer(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {total_added} –Ω–æ–≤–æ—Å—Ç–µ–π –≤ –æ—á–µ—Ä–µ–¥—å")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def handle_other_messages(message: types.Message):
    if is_admin(message.from_user.id):
        await message.answer(
            "‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n"
            "–∏–ª–∏ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã"
        )
    else:
        await message.answer("‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
async def initialize():
    await init_db()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")


# –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
async def on_startup():
    await initialize()